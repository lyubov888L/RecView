Microsoft (R) Macro Assembler (x64) Version 9.00.21022.08   12/24/18 05:48:26
projx64.asm						     Page 1 - 1


				;ml64.exe

 00000000			.data
				align 16
 00000000 00000000		F3210 real4 0.0, 1.0, 2.0, 3.0
	   3F800000
	   40000000
	   40400000

 00000000			.code

 00000000			projx64 PROC
				;	mov r10, rcx ; the first arg = rcx
				;	mov r10, rdx ; the 2nd arg = rdx
				;	mov rax, r10 ; rax to return result

				;			for (int iy=0; iy<ixdimp; iy++) {
				;				const int ifpidx = iy * ixdimp;
				;				const float fyoff = iy * fsin + foffset;
				;				for (int ix=0; ix<ixdimp; ix++) {
				;					int ix0 = (int)(ix * fcos + fyoff);
				;					if (ix0 < 0) continue;
				;					if (ix0 >= ixdimpg) continue;
				;					ifp[ifpidx + ix] += ipgp[ix0];
				;				}
				;			}

				;local valiables
				;	local pmxcsr :dword
				;	local smxcsr :dword
				;store registers
 00000000  56				push rsi
 00000001  57				push rdi
				;	stmxcsr smxcsr
				;get pointer to args
 00000002  48/ 8B F1			mov rsi, rcx	; arg #1
				;load valiables	
 00000005  48/ 8B 06			mov rax, [rsi]	; &fcos
 00000008  F3/ 0F 10 00			movss xmm0, real4 ptr [rax]
 0000000C  0F C6 C0 00			shufps xmm0, xmm0, 0
					
 00000010  48/ 8B 46 08			mov rax, [rsi + 8]	; &fsin
 00000014  F3/ 0F 10 08			movss xmm1, real4 ptr [rax]
 00000018  0F C6 C9 00			shufps xmm1, xmm1, 0

 0000001C  48/ 8B 46 10			mov rax, [rsi + 16]	; &foffset
 00000020  F3/ 0F 10 38			movss xmm7, real4 ptr [rax]
 00000024  0F C6 FF 00			shufps xmm7, xmm7, 0

 00000028  0F 28 35			movaps xmm6, F3210
	   00000000 R
					
				;	mov ixdimpg, [rsi + 24]
 0000002F  4C/ 8B 56 20			mov r10, [rsi + 32]	; ixdimp
				;	mov ifp, [rsi + 40]
				;	mov igp, [rsi + 48]

				;init params
 00000033  4D/ 8B CA			mov r9, r10
 00000036  49/ C1 E1 02			shl r9, 2	; r9<==ixdimp * 4

 0000003A  49/ 8B C2			mov rax, r10; iy = ixdimp
 0000003D  48/ 8B C8			mov rcx, rax
 00000040  48/ FF C8			dec rax
 00000043  48/ F7 E9			imul rcx
 00000046  48/ C1 E0 02			shl rax, 2	; ixy = ixdimp * (ixdimp - 1) * 4
 0000004A  48/ 03 46 28			add rax, [rsi + 40]	; ixy += ifp
 0000004E  48/ 8B F8			mov rdi, rax

				;sse rounding mode RC=00B (MXCSR[14:13])
				;	stmxcsr pmxcsr
				;	and pmxcsr, 0FFFF9FFFh
				;	or pmxcsr,  000000000h
				;	ldmxcsr pmxcsr

				;start process
 00000051  48/ 8B 4E 18			mov rcx, [rsi + 24]	; ixdimpg
 00000055  48/ 8B 76 30			mov rsi, [rsi + 48]	; igp

 00000059  49/ 8B D2			mov rdx, r10	; iy<==ixdimp
 0000005C  48/ FF CA			dec rdx
 0000005F  48/ C7 C0			mov rax, 0
	   00000000
 00000066			LOOPY:
 00000066  49/ 8B DA			mov rbx, r10	; ix<==ixdimp
 00000069  48/ FF CB			dec rbx
 0000006C  F3/ 48/ 0F 2A DA		cvtsi2ss xmm3, rdx	; xmm3<==iy
 00000071  0F C6 DB 00			shufps xmm3, xmm3, 0	; xmm3<==iy, iy, iy, iy
 00000075  0F 28 E9			movaps xmm5, xmm1	; xmm5<==fsin, fsin, fsin, fsin
 00000078  0F 59 EB			mulps xmm5, xmm3	; iy * fsin for each float
 0000007B  0F 58 EF			addps xmm5, xmm7	; + foffset for each float
 0000007E			LOOPX:
 0000007E  F3/ 48/ 0F 2A D3		cvtsi2ss xmm2, rbx	; xmm2<==ix
 00000083  0F C6 D2 00			shufps xmm2, xmm2, 0	; xmm2<==ix, ix, ix, ix
 00000087  0F 5C D6			subps xmm2, xmm6	; xmm2<==ix-3, ix-2, ix-2, ix
 0000008A  0F 28 E0			movaps xmm4, xmm0	; xmm4<==fcos, fcos, fcos, fcos
 0000008D  0F 59 E2			mulps xmm4, xmm2	; (ix-n) * fcos
 00000090  0F 58 E5			addps xmm4, xmm5	; (ix-n) * fcos + foffset
 00000093  F3/ 0F 5B E4			cvttps2dq xmm4, xmm4	; xmm4 float*4 to integer32*4
 00000097  66| 0F 7E E0			movd eax, xmm4	; lower 4 bytes to eax
				;	pextrd eax, xmm4, 0	; SSE4.1
 0000009B  3B C1			cmp eax, ecx	; ix<=>ixdimpg
 0000009D  73 06			jae LOOPXSKIP1	; ix0 >= ixdimp * DBPT_GINTP or ix0 < 0
 0000009F  8B 04 86			mov eax, [rsi + rax * 4]	; eax<==igp[ix * DBPT_GINTP]
 000000A2  01 04 9F			add [rdi + rbx * 4], eax	; ifp[ix] += eax
 000000A5			LOOPXSKIP1:
 000000A5  48/ FF CB			dec rbx	; ix--
 000000A8  7C 48			jl LOOPYEND	; ix < 0
 000000AA  66| 0F 73 DC			psrldq xmm4, 4	; shift right by 4 bytes (integer32)
	   04
 000000AF  66| 0F 7E E0			movd eax, xmm4
				;	pextrd eax, xmm4, 1	; SSE4.1
 000000B3  3B C1			cmp eax, ecx; ixdimpg
 000000B5  73 06			jae LOOPXSKIP2	; ix0 >= ixdimp * DBPT_GINTP or ix0 < 0
 000000B7  8B 04 86			mov eax, [rsi + rax * 4]
 000000BA  01 04 9F			add [rdi + rbx * 4], eax
 000000BD			LOOPXSKIP2:
 000000BD  48/ FF CB			dec rbx	; ix--
 000000C0  7C 30			jl LOOPYEND	; ix < 0
 000000C2  66| 0F 73 DC			psrldq xmm4, 4
	   04
 000000C7  66| 0F 7E E0			movd eax, xmm4
				;	pextrd eax, xmm4, 2	; SSE4.1
 000000CB  3B C1			cmp eax, ecx; ixdimpg
 000000CD  73 06			jae LOOPXSKIP3	; ix0 >= ixdimp * DBPT_GINTP or ix0 < 0
 000000CF  8B 04 86			mov eax, [rsi + rax * 4]
 000000D2  01 04 9F			add [rdi + rbx * 4], eax
 000000D5			LOOPXSKIP3:
 000000D5  48/ FF CB			dec rbx	; ix--
 000000D8  7C 18			jl LOOPYEND	; ix < 0
 000000DA  66| 0F 73 DC			psrldq xmm4, 4
	   04
 000000DF  66| 0F 7E E0			movd eax, xmm4
				;	pextrd eax, xmm4, 3	; SSE4.1
 000000E3  3B C1			cmp eax, ecx; ixdimpg
 000000E5  73 06			jae LOOPXEND	; ix0 >= ixdimp * DBPT_GINTP or ix0 < 0
 000000E7  8B 04 86			mov eax, [rsi + rax * 4]
 000000EA  01 04 9F			add [rdi + rbx * 4], eax
 000000ED			LOOPXEND:
 000000ED  48/ FF CB			dec rbx	; ix--
 000000F0  7D 8C			jge LOOPX	; ix >= 0
 000000F2			LOOPYEND:
 000000F2  49/ 2B F9			sub rdi, r9 ; ixdimp*4
 000000F5  48/ FF CA			dec rdx	; iy--
 000000F8  0F 8D FFFFFF68		jge LOOPY	; iy >= 0

				;	ldmxcsr smxcsr
 000000FE  5F				pop rdi
 000000FF  5E				pop rsi
 00000100  C3				ret

 00000101			projx64 ENDP

				end
Microsoft (R) Macro Assembler (x64) Version 9.00.21022.08   12/24/18 05:48:26
projx64.asm						     Symbols 2 - 1




Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

projx64  . . . . . . . . . . . .	P 	 00000000 _TEXT	Length= 00000101 Public
  LOOPY  . . . . . . . . . . . .	L 	 00000066 _TEXT	
  LOOPX  . . . . . . . . . . . .	L 	 0000007E _TEXT	
  LOOPXSKIP1 . . . . . . . . . .	L 	 000000A5 _TEXT	
  LOOPXSKIP2 . . . . . . . . . .	L 	 000000BD _TEXT	
  LOOPXSKIP3 . . . . . . . . . .	L 	 000000D5 _TEXT	
  LOOPXEND . . . . . . . . . . .	L 	 000000ED _TEXT	
  LOOPYEND . . . . . . . . . . .	L 	 000000F2 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

F3210  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
WIN_X64  . . . . . . . . . . . .	Text   	 

	   0 Warnings
	   0 Errors
